# Build mongo-c-driver on latest Windows using available Visual Studio Versions.

name: Build mongo-c-driver

on:
    push:
        branches: [ main ]

    workflow_dispatch:

jobs:
  
  build-on-windows:
    runs-on: windows-2019

    strategy:
      matrix: 
        mongoversion: ['1.16.2', '1.28.0']

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build mongo-c-driver
      shell: pwsh
      run: ${{github.workspace}}\.github\workflows\build_mongo-c-driver.ps1 -buildPath ${{github.workspace}}\build-${{ matrix.mongoversion }} -mongoVersion ${{ matrix.mongoversion }} -installPath ${{github.workspace}}\releases

    - uses: actions/upload-artifact@v4
      with:
        name: mongo-c-driver-${{ matrix.mongoversion }}-vs2019x64
        path: ${{github.workspace}}/releases/mongo-c-driver-${{ matrix.mongoversion }}-vs2019x64.zip
  
  push-to-release-branch:
    needs: build-on-windows
    runs-on: windows-2019

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Create new release branch or checkout and pull the release branch
      run: |
        git config --global user.name 'crazyzlj'
        git config --global user.email 'crazyzlj@gmail.com'
        if (git ls-remote --exit-code --heads origin release) { 
          Write-Host "Branch release exists, pull it."
          git pull
          git checkout -b release origin/release

          $pkgnames = "mongo-c-driver"
          foreach ($pkgname in $pkgnames) {
            if (Test-Path -LiteralPath ${{github.workspace}}/$pkgname) {
              Remove-Item -LiteralPath ${{github.workspace}}/$pkgname -Verbose -Recurse
              git add .
              git commit -m "remove $paths"
            } else {
              New-Item -itemType Directory -Path ${{github.workspace}} -Name $pkgname
            }
          }
        } else {
          Write-Host "Branch release does not exist, checkout for a new branch."
          git switch --orphan release
          git commit --allow-empty -m "Initial commit on orphan branch named release"
        }
    
    - name: download-artifacts
      uses: actions/download-artifact@v4
      with:
        path: ${{github.workspace}}/mongo-c-driver
        pattern: mongo-c-driver-*
        merge-multiple: true

    - name: Push the release branch
      run: |
        git add .
        git commit -am "Add newly built packages on Windows"
        if (git ls-remote --exit-code --heads origin release) {
          git pull origin release
        }
        git push origin release
